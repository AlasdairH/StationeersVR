//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_InteractUI;
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Boolean p_default_HeadsetOnHead;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnLeft;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnRight;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        private static SteamVR_Action_Vector2 p_laserPointers_PitchAndYaw;
        
        private static SteamVR_Action_Boolean p_laserPointers_RightClick;
        
        private static SteamVR_Action_Boolean p_laserPointers_LeftClick;
        
        private static SteamVR_Action_Boolean p_laserPointers_ClickModifier;
        
        private static SteamVR_Action_Boolean p_laserPointers_Jump;
        
        private static SteamVR_Action_Boolean p_stationeers_ToggleInventory;
        
        private static SteamVR_Action_Boolean p_stationeers_ToggleMenu;
        
        private static SteamVR_Action_Boolean p_stationeers_MouseControl;
        
        private static SteamVR_Action_Boolean p_stationeers_UseLeft;
        
        private static SteamVR_Action_Vector2 p_stationeers_PitchAndYaw;
        
        private static SteamVR_Action_Pose p_stationeers_PoseL;
        
        private static SteamVR_Action_Pose p_stationeers_PoseR;
        
        private static SteamVR_Action_Vector2 p_stationeers_ContextScroll;
        
        private static SteamVR_Action_Boolean p_stationeers_Grab;
        
        private static SteamVR_Action_Vector2 p_stationeers_Walk;
        
        private static SteamVR_Action_Boolean p_stationeers_UseRight;
        
        private static SteamVR_Action_Boolean p_stationeers_SnapTurnLeft;
        
        private static SteamVR_Action_Boolean p_stationeers_SnapTurnRight;
        
        private static SteamVR_Action_Boolean p_stationeers_Jetpack;
        
        private static SteamVR_Action_Boolean p_stationeers_Ascend;
        
        private static SteamVR_Action_Boolean p_stationeers_Descend;
        
        private static SteamVR_Action_Boolean p_stationeers_ClickModifier;
        
        private static SteamVR_Action_Vibration p_stationeers_Haptic;
        
        public static SteamVR_Action_Boolean default_InteractUI
        {
            get
            {
                return SteamVR_Actions.p_default_InteractUI.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Boolean default_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_default_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnLeft
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnRight
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Vector2 laserPointers_PitchAndYaw
        {
            get
            {
                return SteamVR_Actions.p_laserPointers_PitchAndYaw.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean laserPointers_RightClick
        {
            get
            {
                return SteamVR_Actions.p_laserPointers_RightClick.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean laserPointers_LeftClick
        {
            get
            {
                return SteamVR_Actions.p_laserPointers_LeftClick.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean laserPointers_ClickModifier
        {
            get
            {
                return SteamVR_Actions.p_laserPointers_ClickModifier.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean laserPointers_Jump
        {
            get
            {
                return SteamVR_Actions.p_laserPointers_Jump.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean stationeers_ToggleInventory
        {
            get
            {
                return SteamVR_Actions.p_stationeers_ToggleInventory.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean stationeers_ToggleMenu
        {
            get
            {
                return SteamVR_Actions.p_stationeers_ToggleMenu.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean stationeers_MouseControl
        {
            get
            {
                return SteamVR_Actions.p_stationeers_MouseControl.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean stationeers_UseLeft
        {
            get
            {
                return SteamVR_Actions.p_stationeers_UseLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 stationeers_PitchAndYaw
        {
            get
            {
                return SteamVR_Actions.p_stationeers_PitchAndYaw.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Pose stationeers_PoseL
        {
            get
            {
                return SteamVR_Actions.p_stationeers_PoseL.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Pose stationeers_PoseR
        {
            get
            {
                return SteamVR_Actions.p_stationeers_PoseR.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Vector2 stationeers_ContextScroll
        {
            get
            {
                return SteamVR_Actions.p_stationeers_ContextScroll.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean stationeers_Grab
        {
            get
            {
                return SteamVR_Actions.p_stationeers_Grab.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 stationeers_Walk
        {
            get
            {
                return SteamVR_Actions.p_stationeers_Walk.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean stationeers_UseRight
        {
            get
            {
                return SteamVR_Actions.p_stationeers_UseRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean stationeers_SnapTurnLeft
        {
            get
            {
                return SteamVR_Actions.p_stationeers_SnapTurnLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean stationeers_SnapTurnRight
        {
            get
            {
                return SteamVR_Actions.p_stationeers_SnapTurnRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean stationeers_Jetpack
        {
            get
            {
                return SteamVR_Actions.p_stationeers_Jetpack.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean stationeers_Ascend
        {
            get
            {
                return SteamVR_Actions.p_stationeers_Ascend.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean stationeers_Descend
        {
            get
            {
                return SteamVR_Actions.p_stationeers_Descend.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean stationeers_ClickModifier
        {
            get
            {
                return SteamVR_Actions.p_stationeers_ClickModifier.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration stationeers_Haptic
        {
            get
            {
                return SteamVR_Actions.p_stationeers_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.laserPointers_PitchAndYaw,
                    SteamVR_Actions.laserPointers_RightClick,
                    SteamVR_Actions.laserPointers_LeftClick,
                    SteamVR_Actions.laserPointers_ClickModifier,
                    SteamVR_Actions.laserPointers_Jump,
                    SteamVR_Actions.stationeers_ToggleInventory,
                    SteamVR_Actions.stationeers_ToggleMenu,
                    SteamVR_Actions.stationeers_MouseControl,
                    SteamVR_Actions.stationeers_UseLeft,
                    SteamVR_Actions.stationeers_PitchAndYaw,
                    SteamVR_Actions.stationeers_PoseL,
                    SteamVR_Actions.stationeers_PoseR,
                    SteamVR_Actions.stationeers_ContextScroll,
                    SteamVR_Actions.stationeers_Grab,
                    SteamVR_Actions.stationeers_Walk,
                    SteamVR_Actions.stationeers_UseRight,
                    SteamVR_Actions.stationeers_SnapTurnLeft,
                    SteamVR_Actions.stationeers_SnapTurnRight,
                    SteamVR_Actions.stationeers_Jetpack,
                    SteamVR_Actions.stationeers_Ascend,
                    SteamVR_Actions.stationeers_Descend,
                    SteamVR_Actions.stationeers_ClickModifier,
                    SteamVR_Actions.stationeers_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.laserPointers_PitchAndYaw,
                    SteamVR_Actions.laserPointers_RightClick,
                    SteamVR_Actions.laserPointers_LeftClick,
                    SteamVR_Actions.laserPointers_ClickModifier,
                    SteamVR_Actions.laserPointers_Jump,
                    SteamVR_Actions.stationeers_ToggleInventory,
                    SteamVR_Actions.stationeers_ToggleMenu,
                    SteamVR_Actions.stationeers_MouseControl,
                    SteamVR_Actions.stationeers_UseLeft,
                    SteamVR_Actions.stationeers_PitchAndYaw,
                    SteamVR_Actions.stationeers_PoseL,
                    SteamVR_Actions.stationeers_PoseR,
                    SteamVR_Actions.stationeers_ContextScroll,
                    SteamVR_Actions.stationeers_Grab,
                    SteamVR_Actions.stationeers_Walk,
                    SteamVR_Actions.stationeers_UseRight,
                    SteamVR_Actions.stationeers_SnapTurnLeft,
                    SteamVR_Actions.stationeers_SnapTurnRight,
                    SteamVR_Actions.stationeers_Jetpack,
                    SteamVR_Actions.stationeers_Ascend,
                    SteamVR_Actions.stationeers_Descend,
                    SteamVR_Actions.stationeers_ClickModifier};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.stationeers_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.stationeers_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.stationeers_PoseL,
                    SteamVR_Actions.stationeers_PoseR};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.laserPointers_RightClick,
                    SteamVR_Actions.laserPointers_LeftClick,
                    SteamVR_Actions.laserPointers_ClickModifier,
                    SteamVR_Actions.laserPointers_Jump,
                    SteamVR_Actions.stationeers_ToggleInventory,
                    SteamVR_Actions.stationeers_ToggleMenu,
                    SteamVR_Actions.stationeers_MouseControl,
                    SteamVR_Actions.stationeers_UseLeft,
                    SteamVR_Actions.stationeers_Grab,
                    SteamVR_Actions.stationeers_UseRight,
                    SteamVR_Actions.stationeers_SnapTurnLeft,
                    SteamVR_Actions.stationeers_SnapTurnRight,
                    SteamVR_Actions.stationeers_Jetpack,
                    SteamVR_Actions.stationeers_Ascend,
                    SteamVR_Actions.stationeers_Descend,
                    SteamVR_Actions.stationeers_ClickModifier};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[0];
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.laserPointers_PitchAndYaw,
                    SteamVR_Actions.stationeers_PitchAndYaw,
                    SteamVR_Actions.stationeers_ContextScroll,
                    SteamVR_Actions.stationeers_Walk};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.laserPointers_PitchAndYaw,
                    SteamVR_Actions.laserPointers_RightClick,
                    SteamVR_Actions.laserPointers_LeftClick,
                    SteamVR_Actions.laserPointers_ClickModifier,
                    SteamVR_Actions.laserPointers_Jump,
                    SteamVR_Actions.stationeers_ToggleInventory,
                    SteamVR_Actions.stationeers_ToggleMenu,
                    SteamVR_Actions.stationeers_MouseControl,
                    SteamVR_Actions.stationeers_UseLeft,
                    SteamVR_Actions.stationeers_PitchAndYaw,
                    SteamVR_Actions.stationeers_ContextScroll,
                    SteamVR_Actions.stationeers_Grab,
                    SteamVR_Actions.stationeers_Walk,
                    SteamVR_Actions.stationeers_UseRight,
                    SteamVR_Actions.stationeers_SnapTurnLeft,
                    SteamVR_Actions.stationeers_SnapTurnRight,
                    SteamVR_Actions.stationeers_Jetpack,
                    SteamVR_Actions.stationeers_Ascend,
                    SteamVR_Actions.stationeers_Descend,
                    SteamVR_Actions.stationeers_ClickModifier};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_InteractUI = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/InteractUI")));
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/HeadsetOnHead")));
            SteamVR_Actions.p_default_SnapTurnLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapTurnLeft")));
            SteamVR_Actions.p_default_SnapTurnRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapTurnRight")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
            SteamVR_Actions.p_laserPointers_PitchAndYaw = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/LaserPointers/in/PitchAndYaw")));
            SteamVR_Actions.p_laserPointers_RightClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/LaserPointers/in/RightClick")));
            SteamVR_Actions.p_laserPointers_LeftClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/LaserPointers/in/LeftClick")));
            SteamVR_Actions.p_laserPointers_ClickModifier = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/LaserPointers/in/ClickModifier")));
            SteamVR_Actions.p_laserPointers_Jump = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/LaserPointers/in/Jump")));
            SteamVR_Actions.p_stationeers_ToggleInventory = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Stationeers/in/ToggleInventory")));
            SteamVR_Actions.p_stationeers_ToggleMenu = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Stationeers/in/ToggleMenu")));
            SteamVR_Actions.p_stationeers_MouseControl = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Stationeers/in/MouseControl")));
            SteamVR_Actions.p_stationeers_UseLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Stationeers/in/UseLeft")));
            SteamVR_Actions.p_stationeers_PitchAndYaw = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/Stationeers/in/PitchAndYaw")));
            SteamVR_Actions.p_stationeers_PoseL = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/Stationeers/in/PoseL")));
            SteamVR_Actions.p_stationeers_PoseR = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/Stationeers/in/PoseR")));
            SteamVR_Actions.p_stationeers_ContextScroll = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/Stationeers/in/ContextScroll")));
            SteamVR_Actions.p_stationeers_Grab = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Stationeers/in/Grab")));
            SteamVR_Actions.p_stationeers_Walk = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/Stationeers/in/Walk")));
            SteamVR_Actions.p_stationeers_UseRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Stationeers/in/UseRight")));
            SteamVR_Actions.p_stationeers_SnapTurnLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Stationeers/in/SnapTurnLeft")));
            SteamVR_Actions.p_stationeers_SnapTurnRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Stationeers/in/SnapTurnRight")));
            SteamVR_Actions.p_stationeers_Jetpack = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Stationeers/in/Jetpack")));
            SteamVR_Actions.p_stationeers_Ascend = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Stationeers/in/Ascend")));
            SteamVR_Actions.p_stationeers_Descend = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Stationeers/in/Descend")));
            SteamVR_Actions.p_stationeers_ClickModifier = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Stationeers/in/ClickModifier")));
            SteamVR_Actions.p_stationeers_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/Stationeers/out/Haptic")));
        }
    }
}
